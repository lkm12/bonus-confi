# 测试环境
# 数据库配置
spring:
  datasource:
    url: jdbc:mysql://192.168.242.128:3306/bonuspoint?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    hikari:
      # 连接只读数据库时配置为true， 保证安全
      read-only: false
      # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      connection-timeout: 30000
      # 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      idle-timeout: 600000
      # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      max-lifetime: 1800000
      # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      maximum-pool-size: 15

  #redis
  redis:
    host: localhost
    database: 0
    port: 6379
    password: 123456
    lettuce:
        pool:
          #最大连接数
          max-active: 8
          #最大阻塞等待时间(负数表示没限制)
          max-wait: -1
          #最大空闲
          max-idle: 8
          #最小空闲
          min-idle: 0
    #连接超时时间
    timeout: 10000
    #key 过期时间 秒
    keyOutTime: 3000
    #keySign 过期时间 秒
    keySignOutTime: 60

# 分布式文件系统fastdfs配置
fdfs:
  # socket连接超时时长
  so-timeout: 1500
  # 连接tracker服务器超时时长
  connect-timeout: 600
  pool:
    # 从池中借出的对象的最大数目
    max-total: 153
    # 获取连接时的最大等待毫秒数100
    max-wait-millis: 102
  # 缩略图生成参数，可选
  thumb-image:
    width: 150
    height: 150
  # 跟踪服务器tracker_server请求地址,支持多个，这里只有一个，如果有多个在下方加- x.x.x.x:port
  tracker-list:
  #- 47.98.33.123:22122
  - 192.168.242.128:22122
  # 存储服务器storage_server访问地址
  web-server-url: http://192.168.242.128:8080/

blockChain:
  url: http://172.16.100.18:9901


  # 接口开关，支持0/1/false/true
# 0/false: 返回挡板信息
# 1/true: 正常服务
method:
  # 上链模块
  chain: true
  # 短信邮件模块
  sms: false

#zuul.routes.service‐a.path=/service‐a/**
#zuul.routes.service‐a.serviceId=hello‐service
#zuul.routes.service‐b.path=/service‐b/**

zuul:
  routes:
    service‐a.path: /service‐a/**

/aaa/*